// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.Models;

namespace CountryAPI.Migrations
{
    [DbContext(typeof(PathContext))]
    [Migration("20201028231209_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CountryAPI.Models.Country", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CountryAPI.Models.CountryConnection", b =>
                {
                    b.Property<decimal>("CountryOneID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("CountryTwoID")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("CountryId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("CountryOneID", "CountryTwoID");

                    b.HasIndex("CountryId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("CountryAPI.Models.CountryConnection", b =>
                {
                    b.HasOne("CountryAPI.Models.Country", null)
                        .WithMany("CountryConnections")
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
